// Mocks generated by Mockito 5.1.0 from annotations
// in banki_flutter/test/features/shop/presentation/bloc/shop_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:banki_flutter/core/error/failure.dart' as _i6;
import 'package:banki_flutter/core/usecase/usecase.dart' as _i8;
import 'package:banki_flutter/features/shop/domain/entities/product_response.dart'
    as _i7;
import 'package:banki_flutter/features/shop/domain/repositories/shop_repository.dart'
    as _i2;
import 'package:banki_flutter/features/shop/domain/usecases/get_all_products.dart'
    as _i3;
import 'package:dartz/dartz.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeShopRepository_0 extends _i1.Fake implements _i2.ShopRepository {}

/// A class which mocks [GetAllProducts].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllProducts extends _i1.Mock implements _i3.GetAllProducts {
  MockGetAllProducts() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ShopRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeShopRepository_0()) as _i2.ShopRepository);
  @override
  _i4.Future<_i5.Either<_i6.Failure, _i7.ProductResponse>?> call(
          _i8.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue:
                  Future<_i5.Either<_i6.Failure, _i7.ProductResponse>?>.value())
          as _i4.Future<_i5.Either<_i6.Failure, _i7.ProductResponse>?>);
}
